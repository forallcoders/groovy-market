{
    "abi": [
      {
        "type": "constructor",
        "inputs": [
          { "name": "name", "type": "string", "internalType": "string" }
        ],
        "stateMutability": "nonpayable"
      },
      {
        "type": "function",
        "name": "eip712Domain",
        "inputs": [],
        "outputs": [
          { "name": "fields", "type": "bytes1", "internalType": "bytes1" },
          { "name": "name", "type": "string", "internalType": "string" },
          { "name": "version", "type": "string", "internalType": "string" },
          { "name": "chainId", "type": "uint256", "internalType": "uint256" },
          {
            "name": "verifyingContract",
            "type": "address",
            "internalType": "address"
          },
          { "name": "salt", "type": "bytes32", "internalType": "bytes32" },
          {
            "name": "extensions",
            "type": "uint256[]",
            "internalType": "uint256[]"
          }
        ],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "execute",
        "inputs": [
          {
            "name": "request",
            "type": "tuple",
            "internalType": "struct ERC2771Forwarder.ForwardRequestData",
            "components": [
              { "name": "from", "type": "address", "internalType": "address" },
              { "name": "to", "type": "address", "internalType": "address" },
              { "name": "value", "type": "uint256", "internalType": "uint256" },
              { "name": "gas", "type": "uint256", "internalType": "uint256" },
              { "name": "deadline", "type": "uint48", "internalType": "uint48" },
              { "name": "data", "type": "bytes", "internalType": "bytes" },
              { "name": "signature", "type": "bytes", "internalType": "bytes" }
            ]
          }
        ],
        "outputs": [],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "executeBatch",
        "inputs": [
          {
            "name": "requests",
            "type": "tuple[]",
            "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
            "components": [
              { "name": "from", "type": "address", "internalType": "address" },
              { "name": "to", "type": "address", "internalType": "address" },
              { "name": "value", "type": "uint256", "internalType": "uint256" },
              { "name": "gas", "type": "uint256", "internalType": "uint256" },
              { "name": "deadline", "type": "uint48", "internalType": "uint48" },
              { "name": "data", "type": "bytes", "internalType": "bytes" },
              { "name": "signature", "type": "bytes", "internalType": "bytes" }
            ]
          },
          {
            "name": "refundReceiver",
            "type": "address",
            "internalType": "address payable"
          }
        ],
        "outputs": [],
        "stateMutability": "payable"
      },
      {
        "type": "function",
        "name": "nonces",
        "inputs": [
          { "name": "owner", "type": "address", "internalType": "address" }
        ],
        "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
        "stateMutability": "view"
      },
      {
        "type": "function",
        "name": "verify",
        "inputs": [
          {
            "name": "request",
            "type": "tuple",
            "internalType": "struct ERC2771Forwarder.ForwardRequestData",
            "components": [
              { "name": "from", "type": "address", "internalType": "address" },
              { "name": "to", "type": "address", "internalType": "address" },
              { "name": "value", "type": "uint256", "internalType": "uint256" },
              { "name": "gas", "type": "uint256", "internalType": "uint256" },
              { "name": "deadline", "type": "uint48", "internalType": "uint48" },
              { "name": "data", "type": "bytes", "internalType": "bytes" },
              { "name": "signature", "type": "bytes", "internalType": "bytes" }
            ]
          }
        ],
        "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
        "stateMutability": "view"
      },
      {
        "type": "event",
        "name": "EIP712DomainChanged",
        "inputs": [],
        "anonymous": false
      },
      {
        "type": "event",
        "name": "ExecutedForwardRequest",
        "inputs": [
          {
            "name": "signer",
            "type": "address",
            "indexed": true,
            "internalType": "address"
          },
          {
            "name": "nonce",
            "type": "uint256",
            "indexed": false,
            "internalType": "uint256"
          },
          {
            "name": "success",
            "type": "bool",
            "indexed": false,
            "internalType": "bool"
          }
        ],
        "anonymous": false
      },
      {
        "type": "error",
        "name": "ERC2771ForwarderExpiredRequest",
        "inputs": [
          { "name": "deadline", "type": "uint48", "internalType": "uint48" }
        ]
      },
      {
        "type": "error",
        "name": "ERC2771ForwarderInvalidSigner",
        "inputs": [
          { "name": "signer", "type": "address", "internalType": "address" },
          { "name": "from", "type": "address", "internalType": "address" }
        ]
      },
      {
        "type": "error",
        "name": "ERC2771ForwarderMismatchedValue",
        "inputs": [
          {
            "name": "requestedValue",
            "type": "uint256",
            "internalType": "uint256"
          },
          { "name": "msgValue", "type": "uint256", "internalType": "uint256" }
        ]
      },
      {
        "type": "error",
        "name": "ERC2771UntrustfulTarget",
        "inputs": [
          { "name": "target", "type": "address", "internalType": "address" },
          { "name": "forwarder", "type": "address", "internalType": "address" }
        ]
      },
      { "type": "error", "name": "FailedCall", "inputs": [] },
      {
        "type": "error",
        "name": "InsufficientBalance",
        "inputs": [
          { "name": "balance", "type": "uint256", "internalType": "uint256" },
          { "name": "needed", "type": "uint256", "internalType": "uint256" }
        ]
      },
      {
        "type": "error",
        "name": "InvalidAccountNonce",
        "inputs": [
          { "name": "account", "type": "address", "internalType": "address" },
          { "name": "currentNonce", "type": "uint256", "internalType": "uint256" }
        ]
      },
      { "type": "error", "name": "InvalidShortString", "inputs": [] },
      {
        "type": "error",
        "name": "StringTooLong",
        "inputs": [{ "name": "str", "type": "string", "internalType": "string" }]
      }
    ],
    "bytecode": {
      "object": "",
      "sourceMap": "121:104:67:-:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;121:104:67;;;;;;;;;;;;;;;;-1:-1:-1;;;;;121:104:67;;;;;;;;;;;-1:-1:-1;;121:104:67;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;121:104:67;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;121:104:67;;3401:45:45;;;:::i;:::-;3393:53;;3467:51;;;:::i;:::-;3456:62;;121:104:67;3542:22:45;;3528:36;;;;121:104:67;3591:25:45;;3574:42;;;3644:13;3627:30;;121:104:67;;4204:80:45;121:104:67;4204:80:45;;2079:95;;;;;;;;;;;;3644:13;2079:95;;;;4278:4;3627:30;2079:95;;;3627:30;4204:80;;;;;;:::i;:::-;121:104:67;4194:91:45;;2079:95;3667:48;4278:4;4204:80;3725:27;121:104:67;;;;;;;2079:95:45;121:104:67;;;;;3627:30:45;121:104:67;;;;;4204:80:45;121:104:67;;;;;3528:36:45;121:104:67;;;;;3574:42:45;121:104:67;;;;;3393:53:45;121:104:67;;;;;3456:62:45;121:104:67;;;;;;;-1:-1:-1;121:104:67;;;;;;-1:-1:-1;121:104:67;;;;;-1:-1:-1;121:104:67;;;;;;-1:-1:-1;;121:104:67;;;;-1:-1:-1;;;;;121:104:67;;;;;;;;;;:::o;2887:340:41:-;;121:104:67;;3032:2:41;3010:24;;3006:215;3032:2;;;121:104:67;;1854:2:41;121:104:67;;1840:16:41;1836:72;;3032:2;121:104:67;;;;2079:95:45;3032:2:41;121:104:67;;;;1949:36:41;3050:27;:::o;121:104:67:-;;;;3032:2:41;121:104:67;;;;;1949:36:41;3050:27;:::o;1836:72::-;121:104:67;3032:2:41;121:104:67;;;1879:18:41;;;;;;;;;;;;121:104:67;;;;;;;;;;;;;;;;3432:13:45;121:104:67;;;;;;1854:2:41;121:104:67;-1:-1:-1;;121:104:67;;;1879:18:41;;;;3006:215;-1:-1:-1;;;;;121:104:67;;;;3432:13:45;121:104:67;;;;;;;;;;;3006:215:41;3032:2;121:104:67;;;;;;;;;;3006:215:41;121:104:67;3032:2:41;121:104:67;;;;;;;;;;;;3432:13:45;121:104:67;;;;;;;;;;;;;;;;;;;3432:13:45;121:104:67;1390:66:41;3168:42;:::o;121:104:67:-;;;;-1:-1:-1;121:104:67;;;;;;;;;;3432:13:45;121:104:67;;;3432:13:45;121:104:67;;3432:13:45;121:104:67;;;;;;;;;;;;;;;;;;;;;3432:13:45;121:104:67;1390:66:41;3168:42;:::o;121:104:67:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:41;121:104:67;;;;;;;;;;;;;;;;;3432:13:45;121:104:67;;;3032:2:41;3432:13:45;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;3432:13:45;121:104:67;;;;;;;;;;3432:13:45;121:104:67;;;;;3432:13:45;121:104:67;;;;;;;;2887:340:41;;121:104:67;;3032:2:41;3010:24;;3006:215;3032:2;;;121:104:67;;1854:2:41;121:104:67;;1840:16:41;1836:72;;3032:2;121:104:67;;;;2079:95:45;3032:2:41;121:104:67;;;;1949:36:41;3050:27;:::o;3006:215::-;-1:-1:-1;;;;;121:104:67;;;;;;;;;;;;;;;;3006:215:41;3032:2;121:104:67;;;;;;;;;;3006:215:41;121:104:67;3032:2:41;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:41;3168:42;:::o;121:104:67:-;;;;-1:-1:-1;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1390:66:41;3168:42;:::o;121:104:67:-;;;;;;;;;;;;;;;;;;;;;;;3032:2:41;121:104:67;;;;;;;;;;;;;;;;;;;;;3032:2:41;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
      "linkReferences": {}
    },
    "deployedBytecode": {
      "object": "0x60806040526004361015610011575f80fd5b5f3560e01c806319d8d38c146106145780637ecebe00146105ce57806384b0196e146104d6578063ccf96b4a146102375763df905caf14610050575f80fd5b61005936610656565b604081013590813403610220575f9161007182610762565b92919082156101f05781156101ca57801561019c5782610194575b508161018c575b506100b2575b505050156100a357005b63d6bda27560e01b5f5260045ffd5b9091925060018060a01b031690815f5260026020525f8060408120928354936001850190556060860135956100e96020820161073b565b916101096101416014602061010160a087018761095f565b94909661073b565b9360405194818692848401998a378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106ae565b519288f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a25f8080610099565bfe5b90505f610093565b91505f61008c565b836101a68761073b565b636422d02b60e11b5f9081526001600160a01b039283166004529116602452604490fd5b65ffffffffffff6101dd6080880161074f565b634a777ac560e11b5f521660045260245ffd5b6101fc6020870161073b565b63d2650cd160e01b5f9081526001600160a01b039190911660045230602452604490fd5b506370647f7960e01b5f526004523460245260445ffd5b60403660031901126104d25760043567ffffffffffffffff81116104d257366023820112156104d25780600401359067ffffffffffffffff82116104d2576024810190602436918460051b0101116104d2576024356001600160a01b03811691908290036104d2578115925f915f945f925b808410610333575050505034810361031d5750816102c357005b814710610306575f80809381935af13d15610301573d6102e281610992565b906102f060405192836106ae565b81525f60203d92013e5b156100a357005b6102fa565b504763cf47918160e01b5f5260045260245260445ffd5b6370647f7960e01b5f526004523460245260445ffd5b909192936103509060406103488785886106e4565b01359061071a565b9361035c8183866106e4565b5f908461036882610762565b93610498575b82610490575b5081610488575b506103b0575b505015610394575b6001019291906102a9565b956103a860019160406103488a86896106e4565b969050610389565b90915060018060a01b0316805f52600260205260405f208054906001820190555f8060608501359460406103e66020830161073b565b6103f360a084018461095f565b61043d601460206104068897959761073b565b938551948186928484019a8b378201906bffffffffffffffffffffffff199060601b16838201520301600b198101845201826106ae565b519301359088f192603f5a91041161018a5760407f842fb24a83793558587a3dab2be7674da4a51d09c5542d6dd354e5d0ea70813c9181519081528415156020820152a28880610381565b90508b61037b565b91508c610374565b82156104c65781156104b3578061036e57836101a68661073b565b65ffffffffffff6101dd6080870161074f565b6101fc6020860161073b565b5f80fd5b346104d2575f3660031901126104d2576105726105127f00000000000000000000000000000000000000000000000000000000000000006109e4565b61053b7f0000000000000000000000000000000000000000000000000000000000000000610b0a565b60206105806040519261054e83856106ae565b5f84525f368137604051958695600f60f81b875260e08588015260e087019061068a565b90858203604087015261068a565b4660608501523060808501525f60a085015283810360c08501528180845192838152019301915f5b8281106105b757505050500390f35b8351855286955093810193928101926001016105a8565b346104d25760203660031901126104d2576004356001600160a01b03811681036104d2576001600160a01b03165f90815260026020908152604090912054604051908152f35b346104d257602061062c61062736610656565b610762565b50908261064e575b5081610646575b506040519015158152f35b90508261063b565b915083610634565b60206003198201126104d2576004359067ffffffffffffffff82116104d25760e09082900360031901126104d25760040190565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90601f8019910116810190811067ffffffffffffffff8211176106d057604052565b634e487b7160e01b5f52604160045260245ffd5b91908110156107065760051b8101359060de19813603018212156104d2570190565b634e487b7160e01b5f52603260045260245ffd5b9190820180921161072757565b634e487b7160e01b5f52601160045260245ffd5b356001600160a01b03811681036104d25790565b3565ffffffffffff811681036104d25790565b9061076c8261073b565b6020830191610890604261077f8561073b565b936107a661078c8861073b565b6001600160a01b03165f9081526002602052604090205490565b94608088019565ffffffffffff6107bc8861074f565b6107d36107cc60a08d018d61095f565b36916109ae565b60208151910120926040519460208601967f7f96328b83274ebc7c1cf4f7a3abda602b51a78b7fa1d86a2ce353d75e587cac885260018060a01b0316604087015260018060a01b0316606086015260408c0135608086015260608c013560a086015260c08501521660e08301526101008201526101008152610857610120826106ae565b519020610862610c14565b906040519161190160f01b8352600283015260228201522061088a6107cc60c088018861095f565b90610bda565b50600481949294101561094b575f6108ab602092159661073b565b6040518381019063572b6c0560e01b8252306024820152602481526108d16044826106ae565b51915afa903d5f51908361093f575b5082610933575b506108f19061074f565b948461090b575b509365ffffffffffff4291161015929190565b9093506001600160a01b03906109209061073b565b166001600160a01b03831614925f6108f8565b151591506108f16108e7565b6020111592505f6108e0565b634e487b7160e01b5f52602160045260245ffd5b903590601e19813603018212156104d2570180359067ffffffffffffffff82116104d2576020019181360383136104d257565b67ffffffffffffffff81116106d057601f01601f191660200190565b9291926109ba82610992565b916109c860405193846106ae565b8294818452818301116104d2578281602093845f960137010152565b60ff8114610a2a5760ff811690601f8211610a1b5760405191610a086040846106ae565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b506040515f5f548060011c9160018216918215610b00575b602084108314610aec578385528492908115610acd5750600114610a70575b610a6d925003826106ae565b90565b505f80805290917f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b818310610ab1575050906020610a6d92820101610a61565b6020919350806001915483858801015201910190918392610a99565b60209250610a6d94915060ff191682840152151560051b820101610a61565b634e487b7160e01b5f52602260045260245ffd5b92607f1692610a42565b60ff8114610b2e5760ff811690601f8211610a1b5760405191610a086040846106ae565b506040515f6001548060011c9160018216918215610bd0575b602084108314610aec578385528492908115610acd5750600114610b7157610a6d925003826106ae565b5060015f90815290917fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b818310610bb4575050906020610a6d92820101610a61565b6020919350806001915483858801015201910190918392610b9c565b92607f1692610b47565b8151919060418303610c0a57610c039250602082015190606060408401519301515f1a90610d30565b9192909190565b50505f9160029190565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480610d07575b15610c6f577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f82527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a08152610d0160c0826106ae565b51902090565b507f00000000000000000000000000000000000000000000000000000000000000004614610c46565b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610db2579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15610da7575f516001600160a01b03811615610d9d57905f905f90565b505f906001905f90565b6040513d5f823e3d90fd5b5050505f916003919056fea2646970667358221220613d1615b0fd6ad31393022cf8c84c7388ca0518f10f9612b030983ecd26449164736f6c634300081b0033",
      "sourceMap": "121:104:67:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5956:13:24;;121:104:67;5943:9:24;;;:26;5939:121;;121:104:67;11291:18:24;;;;:::i;:::-;11546:19;;;;;11542:115;;11675:7;;11671:101;;11790:12;;11786:109;;11992:33;;;121:104:67;11992:43:24;;;;121:104:67;11988:728:24;;;121:104:67;6074:24:24;;;;6070:81;;121:104:67;6070:81:24;1603:19:34;;;121:104:67;6121:19:24;121:104:67;;6121:19:24;11988:728;121:104:67;;;;;;;;;;;;;;1121:7:38;121:104:67;;;;;;;;;;;6093:4:24;121:104:67;;;;12208:11:24;;;121:104:67;12246:10:24;;121:104:67;12246:10:24;;;:::i;:::-;12350:12;12364;12333:44;121:104:67;;12350:12:24;;;;;;:::i;:::-;12364;;;;:::i;:::-;121:104:67;;;12333:44:24;;;;;;;121:104:67;;;;;;;;;12208:11:24;121:104:67;;;;;;12333:44:24;;;;;;;;;;;:::i;:::-;12422:160;;;;;16401:2;12422:160;121:104:67;;-1:-1:-1;16373:423:24;;121:104:67;12652:53:24;121:104:67;;;;;;;;;;;;;12652:53:24;11988:728;;;;;16373:423;16720:66;11992:43;;;;;;:33;;-1:-1:-1;11992:33:24;;;11786:109;11867:12;;;;:::i;:::-;-1:-1:-1;;;121:104:67;11829:51:24;;;-1:-1:-1;;;;;121:104:67;;;;;;;;;;;11829:51:24;11671:101;121:104:67;11740:16:24;;;;;:::i;:::-;11709:48;;;121:104:67;11709:48:24;121:104:67;;;;;11709:48:24;11542:115;11616:10;;;;;:::i;:::-;-1:-1:-1;;;121:104:67;11592:50:24;;;-1:-1:-1;;;;;121:104:67;;;;;;11636:4:24;121:104:67;;;;11592:50:24;5939:121;8257:57;;;;121:104:67;5992:57:24;121:104:67;;5943:9:24;121:104:67;;;;5992:57:24;121:104:67;;;-1:-1:-1;;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;121:104:67;;;;;;;;;7721:28:24;;7760:21;121:104:67;7791:19:24;121:104:67;7826:9:24;121:104:67;7821:251:24;7837:19;;;;;;8225:9;;;;;8208:26;;8204:121;;8492:16;;8488:328;;121:104:67;8488:328:24;1375:21:34;;:30;1371:125;;121:104:67;1525:33:34;;;;;;;121:104:67;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;1572:8:34;1568:65;;121:104:67;;;;1371:125:34;1455:21;;1428:57;;;121:104:67;1428:57:34;121:104:67;;;;;;1428:57:34;8204:121:24;8257:57;;;121:104:67;8257:57:24;121:104:67;;8225:9:24;121:104:67;;;;8257:57:24;7858:3;7894:11;;;;7877:34;7894:11;121:104:67;7894:11:24;;;;;:::i;:::-;:17;121:104:67;7877:34:24;;:::i;:::-;7949:11;;;;;;:::i;:::-;121:104:67;11291:18:24;;;;;:::i;:::-;11503:402;;;7858:3;11992:33;;;7858:3;11992:43;;;;7858:3;11988:728;;;7858:3;7987:8;;;7983:79;;7858:3;121:104:67;;7826:9:24;;;;;7983:79;8030:11;8015:32;121:104:67;8030:11:24;121:104:67;8030:11:24;;;;;:::i;8015:32::-;7983:79;;;;;11988:728;121:104:67;;;;;;;;;;;;1121:7:38;121:104:67;;;;;;;;;;;;;;12208:11:24;;;;121:104:67;12246:10:24;121:104:67;12246:10:24;121:104:67;12246:10:24;;;:::i;:::-;12350:12;;;;;;:::i;:::-;12333:44;121:104:67;;12364:12:24;;;;;;:::i;:::-;121:104:67;;;12333:44:24;;;;;;;121:104:67;;;;;;;;;12208:11:24;121:104:67;;;;;;12333:44:24;;;;;;;;;;;:::i;:::-;12422:160;12286:13;;121:104:67;12422:160:24;;;;16401:2;12422:160;121:104:67;;-1:-1:-1;16373:423:24;;121:104:67;12652:53:24;121:104:67;;;;;;;;;;;;;12652:53:24;11988:728;;;;11992:43;;;;;;:33;;-1:-1:-1;11992:33:24;;;11503:402;11546:19;;11542:115;;11675:7;;11671:101;;11790:12;11503:402;11786:109;11867:12;;;;:::i;11671:101::-;121:104:67;11740:16:24;;;;;:::i;11542:115::-;11616:10;121:104:67;11616:10:24;;;:::i;121:104:67:-;;;;;;;;;;-1:-1:-1;;121:104:67;;;;;6099:41:45;:5;:41;:::i;:::-;6554:47;:8;:47;:::i;:::-;121:104:67;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;5590:13:45;121:104:67;;;;5625:4:45;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;121:104:67;;;;;;;;6584:16:45;121:104:67;;;;;;;;;-1:-1:-1;;121:104:67;;;;;;-1:-1:-1;;;;;121:104:67;;;;;;-1:-1:-1;;;;;121:104:67;-1:-1:-1;121:104:67;;;624:7:38;121:104:67;;;;;;;;;;;;;;;;;;;;5049:18:24;121:104:67;;;:::i;:::-;5049:18:24;:::i;:::-;5084:28;;;;;121:104:67;5084:43:24;;;;121:104:67;;;;;;;;;;5084:43:24;;;;;;:28;;-1:-1:-1;5084:28:24;;;121:104:67;;-1:-1:-1;;121:104:67;;;;;;;;;;;;;;;;;;-1:-1:-1;;121:104:67;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;121:104:67;;;;;;;;-1:-1:-1;;121:104:67;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;121:104:67;;;;;-1:-1:-1;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;121:104:67;;;;;;;:::o;:::-;;;;;;;;;;:::o;9006:457:24:-;;10099:12;;;:::i;:::-;10133:10;;;;9963:445;3445:249:48;10133:10:24;;;:::i;:::-;10240:12;10233:20;10240:12;;;:::i;:::-;-1:-1:-1;;;;;121:104:67;-1:-1:-1;121:104:67;;;624:7:38;121:104:67;;;;;;;538:107:38;10233:20:24;10275:16;;;;;121:104:67;10275:16:24;;;:::i;:::-;3115:141;10323:12;;;;;;:::i;:::-;3115:141;;;:::i;:::-;10133:10;121:104:67;;;;10313:23:24;121:104:67;10165:13:24;121:104:67;10020:334:24;10133:10;10020:334;;121:104:67;3115:141:24;121:104:67;;;;;;;;10165:13:24;3115:141;;121:104:67;;;;;;;10200:11:24;3115:141;;121:104:67;10165:13:24;;;121:104:67;10275:16:24;3115:141;;121:104:67;10200:11:24;;;121:104:67;10323:12:24;3115:141;;121:104:67;3115:141:24;;;121:104:67;;3115:141:24;;;121:104:67;3115:141:24;;;121:104:67;3115:141:24;10020:334;;;;;;:::i;:::-;121:104:67;9993:375:24;;5053:20:45;;:::i;:::-;3445:249:48;10165:13:24;3445:249:48;;-1:-1:-1;;;3445:249:48;;;;;;;;;;;3115:141:24;10390:17;3115:141;10390:17;;;;:::i;3115:141::-;9963:445;;:::i;:::-;3115:141;;;;;;;;;;-1:-1:-1;9313:10:24;10133;10427:33;;9313:10;;:::i;:::-;10165:13;121:104:67;13056:66:24;;;;;;;;;13115:4;13056:66;;;121:104:67;13056:66:24;;;;;;;:::i;:::-;13212:739;;;;;;-1:-1:-1;13212:739:24;13968:29;;;;9006:457;13968:48;;;;9006:457;9338:16;;;;:::i;:::-;9387:36;;;;9006:457;9273:183;9358:15;121:104:67;9358:15:24;121:104:67;;9338:35:24;;9273:183;;9006:457;:::o;9387:36::-;121:104:67;;-1:-1:-1;;;;;;121:104:67;9411:12:24;;;:::i;:::-;121:104:67;-1:-1:-1;;;;;121:104:67;;9398:25:24;;9387:36;;;13968:48;14001:15;;;-1:-1:-1;9338:16:24;13968:48;;:29;10133:10;-1:-1:-1;13979:18:24;;-1:-1:-1;13968:29:24;;;3115:141;121:104:67;;;-1:-1:-1;3115:141:24;;;;;-1:-1:-1;3115:141:24;121:104:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;121:104:67;;;;:::o;3115:141:24:-;;;;;;;:::i;:::-;121:104:67;;;;;;;:::i;:::-;3115:141:24;;;;;;;;;;;;;;;;-1:-1:-1;3115:141:24;;121:104:67;;;;3115:141:24:o;3358:267:41:-;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;121:104:67;;;;;;;:::i;:::-;2311:2:41;121:104:67;;;;;;;;;;;2324:106:41;;;3543:22;:::o;2675:69::-;2713:20;;;121:104:67;2713:20:41;;121:104:67;2713:20:41;3477:142;121:104:67;;;;;1390:66:41;;;;;;;;;;;;;3477:142;1390:66;;;;;;;121:104:67;;;;;;1390:66:41;;;;;;;;;;;;;;;;:::i;:::-;3596:12;:::o;1390:66::-;-1:-1:-1;121:104:67;1390:66:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;121:104:67;;;1390:66:41;;;;;;;;;;;121:104:67;;;;1390:66:41;;;;;121:104:67;1390:66:41;;;;;;;;3358:267;1390:66;3481:46;;1390:66;;;2625:40;;2679:11;2688:2;2679:11;;2675:69;;121:104:67;;;;;;;:::i;3477:142:41:-;121:104:67;;;-1:-1:-1;6584:16:45;1390:66:41;;6584:16:45;1390:66:41;;6584:16:45;1390:66:41;;;;;;;3477:142;1390:66;;;;;;;121:104:67;;;;;;1390:66:41;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6584:16:45;-1:-1:-1;1390:66:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6584:16:45;1390:66:41;;;;;;;;;;;;;;;;;;;;;;;;2129:778:44;121:104:67;;;2129:778:44;2319:2;2299:22;;2319:2;;2751:25;2535:196;;;;;;;;;;;;;;;-1:-1:-1;2535:196:44;2751:25;;:::i;:::-;2744:32;;;;;:::o;2295:606::-;2807:83;;2823:1;2807:83;2827:35;2807:83;;:::o;3845:262:45:-;3929:4;3938:11;-1:-1:-1;;;;;121:104:67;3921:28:45;;:63;;3845:262;3917:184;;;4007:22;4000:29;:::o;3917:184::-;121:104:67;;4204:80:45;;;121:104:67;2079:95:45;121:104:67;;4226:11:45;121:104:67;2079:95:45;;121:104:67;4239:14:45;2079:95;;;121:104:67;4255:13:45;2079:95;;;121:104:67;3929:4:45;2079:95;;;121:104:67;2079:95:45;4204:80;;;;;;:::i;:::-;121:104:67;4194:91:45;;4060:30;:::o;3921:63::-;3970:14;;3953:13;:31;3921:63;;5203:1551:44;;;6283:66;6270:79;;6266:164;;121:104:67;;;;;;-1:-1:-1;121:104:67;;;;;;;;;;;;;;;;;;;6541:24:44;;;;;;;;;-1:-1:-1;6541:24:44;-1:-1:-1;;;;;121:104:67;;6579:20:44;6575:113;;6698:49;-1:-1:-1;6698:49:44;-1:-1:-1;5203:1551:44;:::o;6575:113::-;6615:62;-1:-1:-1;6615:62:44;6541:24;6615:62;-1:-1:-1;6615:62:44;:::o;6541:24::-;121:104:67;;;-1:-1:-1;121:104:67;;;;;6266:164:44;6365:54;;;6381:1;6365:54;6385:30;6365:54;;:::o",
      "linkReferences": {},
      "immutableReferences": {
        "40347": [{ "start": 3149, "length": 32 }],
        "40349": [{ "start": 3338, "length": 32 }],
        "40351": [{ "start": 3095, "length": 32 }],
        "40353": [{ "start": 3228, "length": 32 }],
        "40355": [{ "start": 3266, "length": 32 }],
        "40358": [{ "start": 1262, "length": 32 }],
        "40361": [{ "start": 1303, "length": 32 }]
      }
    },
    "methodIdentifiers": {
      "eip712Domain()": "84b0196e",
      "execute((address,address,uint256,uint256,uint48,bytes,bytes))": "df905caf",
      "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": "ccf96b4a",
      "nonces(address)": "7ecebe00",
      "verify((address,address,uint256,uint256,uint48,bytes,bytes))": "19d8d38c"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"}],\"name\":\"ERC2771ForwarderExpiredRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"ERC2771ForwarderInvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedValue\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"ERC2771ForwarderMismatchedValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"ERC2771UntrustfulTarget\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentNonce\",\"type\":\"uint256\"}],\"name\":\"InvalidAccountNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"ExecutedForwardRequest\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData[]\",\"name\":\"requests\",\"type\":\"tuple[]\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"}],\"name\":\"executeBatch\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"},{\"internalType\":\"uint48\",\"name\":\"deadline\",\"type\":\"uint48\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct ERC2771Forwarder.ForwardRequestData\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC2771ForwarderExpiredRequest(uint48)\":[{\"details\":\"The request `deadline` has expired.\"}],\"ERC2771ForwarderInvalidSigner(address,address)\":[{\"details\":\"The request `from` doesn't match with the recovered `signer`.\"}],\"ERC2771ForwarderMismatchedValue(uint256,uint256)\":[{\"details\":\"The `requestedValue` doesn't match with the available `msgValue`.\"}],\"ERC2771UntrustfulTarget(address,address)\":[{\"details\":\"The request target doesn't trust the `forwarder`.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"InvalidAccountNonce(address,uint256)\":[{\"details\":\"The nonce used for an `account` is not the expected current nonce.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"ExecutedForwardRequest(address,uint256,bool)\":{\"details\":\"Emitted when a `ForwardRequest` is executed. NOTE: An unsuccessful forward request could be due to an invalid signature, an expired deadline, or simply a revert in the requested call. The contract guarantees that the relayer is not able to force the requested call to run out of gas.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"},\"execute((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}.\"},\"executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)\":{\"details\":\"Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting.\"},\"nonces(address)\":{\"details\":\"Returns the next unused nonce for an address.\"},\"verify((address,address,uint256,uint256,uint48,bytes,bytes))\":{\"details\":\"Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/WalletProxy/ProxyWallet/Forwarder.sol\":\"Forwarder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol\":{\"keccak256\":\"0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8\",\"dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm\"]},\"lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol\":{\"keccak256\":\"0xa0c3017faa0f4f681f16c53a7c9a16bc8cbebb3f08759ded959bd14877f02a2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e9b3a599a06af81da55f162e95a48bb34eee44dffea3ff11c42155858fd72f23\",\"dweb:/ipfs/QmUtx25tYPgnbzjbVrNnhkzhY8NXRgaa1wFJAnQiNqRhnK\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"lib/openzeppelin-contracts/contracts/utils/Nonces.sol\":{\"keccak256\":\"0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e\",\"dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ\"]},\"lib/openzeppelin-contracts/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"src/WalletProxy/ProxyWallet/Forwarder.sol\":{\"keccak256\":\"0x373240218665c2de388379a43e7df3cd7cfd9389cce8be10d0f847425e20e005\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd0084e88aca643fd2cabf022d7e50c48d948757cead9c02598305761915d082\",\"dweb:/ipfs/QmSaKyojyascRraepAsApjFov9V18CmWd3TJp9aiy3s1se\"]}},\"version\":1}",
    "metadata": {
      "compiler": { "version": "0.8.27+commit.40a35a09" },
      "language": "Solidity",
      "output": {
        "abi": [
          {
            "inputs": [
              { "internalType": "string", "name": "name", "type": "string" }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
          },
          {
            "inputs": [
              { "internalType": "uint48", "name": "deadline", "type": "uint48" }
            ],
            "type": "error",
            "name": "ERC2771ForwarderExpiredRequest"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "signer", "type": "address" },
              { "internalType": "address", "name": "from", "type": "address" }
            ],
            "type": "error",
            "name": "ERC2771ForwarderInvalidSigner"
          },
          {
            "inputs": [
              {
                "internalType": "uint256",
                "name": "requestedValue",
                "type": "uint256"
              },
              { "internalType": "uint256", "name": "msgValue", "type": "uint256" }
            ],
            "type": "error",
            "name": "ERC2771ForwarderMismatchedValue"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "target", "type": "address" },
              {
                "internalType": "address",
                "name": "forwarder",
                "type": "address"
              }
            ],
            "type": "error",
            "name": "ERC2771UntrustfulTarget"
          },
          { "inputs": [], "type": "error", "name": "FailedCall" },
          {
            "inputs": [
              { "internalType": "uint256", "name": "balance", "type": "uint256" },
              { "internalType": "uint256", "name": "needed", "type": "uint256" }
            ],
            "type": "error",
            "name": "InsufficientBalance"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "account", "type": "address" },
              {
                "internalType": "uint256",
                "name": "currentNonce",
                "type": "uint256"
              }
            ],
            "type": "error",
            "name": "InvalidAccountNonce"
          },
          { "inputs": [], "type": "error", "name": "InvalidShortString" },
          {
            "inputs": [
              { "internalType": "string", "name": "str", "type": "string" }
            ],
            "type": "error",
            "name": "StringTooLong"
          },
          {
            "inputs": [],
            "type": "event",
            "name": "EIP712DomainChanged",
            "anonymous": false
          },
          {
            "inputs": [
              {
                "internalType": "address",
                "name": "signer",
                "type": "address",
                "indexed": true
              },
              {
                "internalType": "uint256",
                "name": "nonce",
                "type": "uint256",
                "indexed": false
              },
              {
                "internalType": "bool",
                "name": "success",
                "type": "bool",
                "indexed": false
              }
            ],
            "type": "event",
            "name": "ExecutedForwardRequest",
            "anonymous": false
          },
          {
            "inputs": [],
            "stateMutability": "view",
            "type": "function",
            "name": "eip712Domain",
            "outputs": [
              { "internalType": "bytes1", "name": "fields", "type": "bytes1" },
              { "internalType": "string", "name": "name", "type": "string" },
              { "internalType": "string", "name": "version", "type": "string" },
              { "internalType": "uint256", "name": "chainId", "type": "uint256" },
              {
                "internalType": "address",
                "name": "verifyingContract",
                "type": "address"
              },
              { "internalType": "bytes32", "name": "salt", "type": "bytes32" },
              {
                "internalType": "uint256[]",
                "name": "extensions",
                "type": "uint256[]"
              }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                "name": "request",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  { "internalType": "address", "name": "to", "type": "address" },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  { "internalType": "uint256", "name": "gas", "type": "uint256" },
                  {
                    "internalType": "uint48",
                    "name": "deadline",
                    "type": "uint48"
                  },
                  { "internalType": "bytes", "name": "data", "type": "bytes" },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "execute"
          },
          {
            "inputs": [
              {
                "internalType": "struct ERC2771Forwarder.ForwardRequestData[]",
                "name": "requests",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  { "internalType": "address", "name": "to", "type": "address" },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  { "internalType": "uint256", "name": "gas", "type": "uint256" },
                  {
                    "internalType": "uint48",
                    "name": "deadline",
                    "type": "uint48"
                  },
                  { "internalType": "bytes", "name": "data", "type": "bytes" },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "address payable",
                "name": "refundReceiver",
                "type": "address"
              }
            ],
            "stateMutability": "payable",
            "type": "function",
            "name": "executeBatch"
          },
          {
            "inputs": [
              { "internalType": "address", "name": "owner", "type": "address" }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "nonces",
            "outputs": [
              { "internalType": "uint256", "name": "", "type": "uint256" }
            ]
          },
          {
            "inputs": [
              {
                "internalType": "struct ERC2771Forwarder.ForwardRequestData",
                "name": "request",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                  },
                  { "internalType": "address", "name": "to", "type": "address" },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  { "internalType": "uint256", "name": "gas", "type": "uint256" },
                  {
                    "internalType": "uint48",
                    "name": "deadline",
                    "type": "uint48"
                  },
                  { "internalType": "bytes", "name": "data", "type": "bytes" },
                  {
                    "internalType": "bytes",
                    "name": "signature",
                    "type": "bytes"
                  }
                ]
              }
            ],
            "stateMutability": "view",
            "type": "function",
            "name": "verify",
            "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
          }
        ],
        "devdoc": {
          "kind": "dev",
          "methods": {
            "eip712Domain()": { "details": "See {IERC-5267}." },
            "execute((address,address,uint256,uint256,uint48,bytes,bytes))": {
              "details": "Executes a `request` on behalf of `signature`'s signer using the ERC-2771 protocol. The gas provided to the requested call may not be exactly the amount requested, but the call will not run out of gas. Will revert if the request is invalid or the call reverts, in this case the nonce is not consumed. Requirements: - The request value should be equal to the provided `msg.value`. - The request should be valid according to {verify}."
            },
            "executeBatch((address,address,uint256,uint256,uint48,bytes,bytes)[],address)": {
              "details": "Batch version of {execute} with optional refunding and atomic execution. In case a batch contains at least one invalid request (see {verify}), the request will be skipped and the `refundReceiver` parameter will receive back the unused requested value at the end of the execution. This is done to prevent reverting the entire batch when a request is invalid or has already been submitted. If the `refundReceiver` is the `address(0)`, this function will revert when at least one of the requests was not valid instead of skipping it. This could be useful if a batch is required to get executed atomically (at least at the top-level). For example, refunding (and thus atomicity) can be opt-out if the relayer is using a service that avoids including reverted transactions. Requirements: - The sum of the requests' values should be equal to the provided `msg.value`. - All of the requests should be valid (see {verify}) when `refundReceiver` is the zero address. NOTE: Setting a zero `refundReceiver` guarantees an all-or-nothing requests execution only for the first-level forwarded calls. In case a forwarded request calls to a contract with another subcall, the second-level call may revert without the top-level call reverting."
            },
            "nonces(address)": {
              "details": "Returns the next unused nonce for an address."
            },
            "verify((address,address,uint256,uint256,uint48,bytes,bytes))": {
              "details": "Returns `true` if a request is valid for a provided `signature` at the current block timestamp. A transaction is considered valid when the target trusts this forwarder, the request hasn't expired (deadline is not met), and the signer matches the `from` parameter of the signed request. NOTE: A request may return false here but it won't cause {executeBatch} to revert if a refund receiver is provided."
            }
          },
          "version": 1
        },
        "userdoc": { "kind": "user", "methods": {}, "version": 1 }
      },
      "settings": {
        "remappings": [
          "@openzeppelin/=lib/openzeppelin-contracts/",
          "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
          "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
          "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
          "forge-std/=lib/forge-std/src/",
          "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
          "openzeppelin-contracts/=lib/openzeppelin-contracts/"
        ],
        "optimizer": { "enabled": true, "runs": 200 },
        "metadata": { "bytecodeHash": "ipfs" },
        "compilationTarget": {
          "src/WalletProxy/ProxyWallet/Forwarder.sol": "Forwarder"
        },
        "evmVersion": "cancun",
        "libraries": {},
        "viaIR": true
      },
      "sources": {
        "lib/openzeppelin-contracts/contracts/interfaces/IERC5267.sol": {
          "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
          "urls": [
            "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
            "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/metatx/ERC2771Context.sol": {
          "keccak256": "0x0b030a33274bde015419d99e54c9164f876a7d10eb590317b79b1d5e4ab23d99",
          "urls": [
            "bzz-raw://68e5f96988198e8efd25ddef0d89750b4daebb7fd1204fa7f5eaccdfcb3398c8",
            "dweb:/ipfs/QmaM6nNkf9UmEtQraopuZamEWCdTWp7GvuN3pjMQrNCHxm"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/metatx/ERC2771Forwarder.sol": {
          "keccak256": "0xa0c3017faa0f4f681f16c53a7c9a16bc8cbebb3f08759ded959bd14877f02a2a",
          "urls": [
            "bzz-raw://e9b3a599a06af81da55f162e95a48bb34eee44dffea3ff11c42155858fd72f23",
            "dweb:/ipfs/QmUtx25tYPgnbzjbVrNnhkzhY8NXRgaa1wFJAnQiNqRhnK"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
          "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
          "urls": [
            "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
            "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
          "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
          "urls": [
            "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
            "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Errors.sol": {
          "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
          "urls": [
            "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
            "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Nonces.sol": {
          "keccak256": "0x0082767004fca261c332e9ad100868327a863a88ef724e844857128845ab350f",
          "urls": [
            "bzz-raw://132dce9686a54e025eb5ba5d2e48208f847a1ec3e60a3e527766d7bf53fb7f9e",
            "dweb:/ipfs/QmXn1a2nUZMpu2z6S88UoTfMVtY2YNh86iGrzJDYmMkKeZ"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Panic.sol": {
          "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
          "urls": [
            "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
            "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/ShortStrings.sol": {
          "keccak256": "0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549",
          "urls": [
            "bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a",
            "dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
          "keccak256": "0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97",
          "urls": [
            "bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b",
            "dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
          "keccak256": "0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed",
          "urls": [
            "bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0",
            "dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
          "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
          "urls": [
            "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
            "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
          "keccak256": "0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d",
          "urls": [
            "bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c",
            "dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol": {
          "keccak256": "0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575",
          "urls": [
            "bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e",
            "dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
          "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
          "urls": [
            "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
            "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
          "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
          "urls": [
            "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
            "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
          ],
          "license": "MIT"
        },
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
          "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
          "urls": [
            "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
            "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
          ],
          "license": "MIT"
        },
        "src/WalletProxy/ProxyWallet/Forwarder.sol": {
          "keccak256": "0x373240218665c2de388379a43e7df3cd7cfd9389cce8be10d0f847425e20e005",
          "urls": [
            "bzz-raw://dd0084e88aca643fd2cabf022d7e50c48d948757cead9c02598305761915d082",
            "dweb:/ipfs/QmSaKyojyascRraepAsApjFov9V18CmWd3TJp9aiy3s1se"
          ],
          "license": "MIT"
        }
      },
      "version": 1
    },
    "id": 67
  }
  